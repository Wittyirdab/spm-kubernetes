(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{zYik:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return b})),a.d(t,"default",(function(){return m}));var n,r=a("wx14"),l=a("zLVn"),o=(a("q1tI"),a("7ljp")),p=a("013z"),b=(a("qKvR"),{}),s=(n="InlineNotification",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",e)}),i={_frontmatter:b},c=p.a;function m(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(o.b)(c,Object(r.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)(s,{mdxType:"InlineNotification"},Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Note:")," As of Release 20.7.0, the Helm version used to verify this runbook is 3.2. All the Helm commands that are used in this runbook are based on Helm v3.")),Object(o.b)("p",null,"The ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/IBM/spm-kubernetes"}),"spm-kubernetes")," repository provides nine Helm charts:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"apps:")," defines how to deploy the IBM® WebSphere® Liberty images with the SPM application."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"batch:")," defines the batch image configuration."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"uawebapp:")," defines how to deploy the Universal Access (React) application."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"web:")," defines how to deploy the static content image for SPM (",Object(o.b)("inlineCode",{parentName:"li"},"Curam")," image only)."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"mqserver:")," defines the IBM WebSphere MQ image configuration."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"openldap:")," defines the OpenLDAP image configuration (used for session failover)."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"xmlserver:")," defines the xmlserver container configuration."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("em",{parentName:"li"},"spm:")," an umbrella chart to contain all the other charts.")),Object(o.b)("p",null,"The charts use a templating mechanism to create the YAML file that is used by Kubernetes.\nFor this reason, the main configuration values are stored for each chart in a ",Object(o.b)("inlineCode",{parentName:"p"},"values.yaml")," file in the main folder of the charts.\nThe values can also be overwritten by the ",Object(o.b)("inlineCode",{parentName:"p"},"spm:*")," umbrella chart or by a provided override file during deployment as described in ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/spm-kubernetes/04-deployment/hc_deployment"}),"Deploying Helm charts"),"."),Object(o.b)("p",null,"YAML is a human-readable structured data format. It provides powerful configuration settings, without having to learn a more complex code type like CSS, JavaScript, or PHP."),Object(o.b)("h2",null,"Preparing to run the Helm charts"),Object(o.b)("p",null,"Before you run the charts, you must configure the database, configure IBM MQ, and test the charts.\nYou may also optionally integrate your deployment with an ISAM server for SSO enablement,\nto do so please complete the steps on the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/spm-kubernetes/07-supporting-infrastructure/ISAM"}),"Enabling ISAM")," page under Supporting Infrastructure before returning here.\nBefore you run the charts, you must configure the database, configure IBM MQ, and resolve all chart dependencies."),Object(o.b)("p",null,"Many of the Helm charts that make up a deployment of SPM depend on the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/IBM/charts/tree/master/samples/ibm-sch"}),"IBM Shared Configuration Helpers")," chart, so an extra Helm repository must be added using the command below:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"helm repo add sch https://raw.githubusercontent.com/IBM/charts/master/repo/samples\nhelm repo update\n")),Object(o.b)("h3",null,"Configuring the database"),Object(o.b)("p",null,"Update the Helm charts to point to the database that you installed in\n",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/spm-kubernetes/01-prereq/prereq"}),"Install Prerequisite Software"),".\nThe following values are provided in the  ",Object(o.b)("inlineCode",{parentName:"p"},"values.yaml")," files and must be modified before deployment to reflect your local environment:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),'global:\n  database:\n    type: "DB2"\n    hostname: "dbhostname"\n    dbName: "dbName"\n    serviceName: ""\n    username: "dbuser"\n    spm_psw: "spmEncryptedDBPassword"\n    wlp_psw: "xorEncodedDBPassword"\n    port: 50000\n')),Object(o.b)(s,{mdxType:"InlineNotification"},Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Note:")," To use an Oracle database, two changes are required:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Change the ",Object(o.b)("inlineCode",{parentName:"li"},"global.database.type")," property value to ",Object(o.b)("inlineCode",{parentName:"li"},"ORA")),Object(o.b)("li",{parentName:"ul"},"Set the ",Object(o.b)("inlineCode",{parentName:"li"},"serviceName")," property (corresponds to the ",Object(o.b)("inlineCode",{parentName:"li"},"curam.db.oracle.servicename")," property in Bootstrap.properties)"))),Object(o.b)("p",null,"All of the above values are required for a successful deployment."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"global.database.spm_psw")," is equavalent to the ",Object(o.b)("inlineCode",{parentName:"p"},"curam.db.password")," property in ",Object(o.b)("inlineCode",{parentName:"p"},"Bootstrap.properties"),".\nThe value can be obtained by running ",Object(o.b)("inlineCode",{parentName:"p"},"./build.sh encrypt -Dpassword=<password>")," from any SPM installation."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"global.database.wlp_psw")," is the WebSphere Liberty WebSphere ",Object(o.b)("inlineCode",{parentName:"p"},"{xor}")," encoding of the database password. The value can be obtained by using ",Object(o.b)("inlineCode",{parentName:"p"},"$WLP_HOME/bin/securityUtility encode <password>"),"."),Object(o.b)("p",null,"While it is possible to update the values directly in the ",Object(o.b)("inlineCode",{parentName:"p"},"spm")," chart, it is advisable to maintain a separate YAML file with values specific to your environment.\nThe YAML file will be used by the ",Object(o.b)("inlineCode",{parentName:"p"},"helm install")," command that is described in ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/spm-kubernetes/04-deployment/hc_deployment"}),"Deploying Helm charts"),"."),Object(o.b)(s,{mdxType:"InlineNotification"},Object(o.b)("p",null,"You can find the full list of values available to override in ",Object(o.b)("inlineCode",{parentName:"p"},"$SPM_HOME/helm-charts/spm/values.yaml"),"."),Object(o.b)("p",null,"Sample override files for Minikube, IKS, and CRC are also available in the ",Object(o.b)("inlineCode",{parentName:"p"},"$SPM_HOME/static/resources")," folder.")),Object(o.b)("h3",null,"Configuring IBM MQ"),Object(o.b)("p",null,"IBM MQ is already configured to work out of the box with a secure connection with IBM WebSphere Liberty.\nThe commands that create all the objects that are needed on the queue manager are defined in a config map, in the ",Object(o.b)("inlineCode",{parentName:"p"},"configmap-mqsc.yaml")," file."),Object(o.b)("p",null,"The password for the IBM MQ web console can be retrieved from the created Secret resource using the command below ",Object(o.b)("strong",{parentName:"p"},"after")," it has been deployed:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"kubectl get secret <releaseName>-mq-credentials -o go-template='{{.data.adminPasswordKey | base64decode}}{{\"\\n\"}}'\n")),Object(o.b)("h3",null,"Configuring Batch heap size"),Object(o.b)("p",null,"The heap size of the batch processing can be adjusted by specifying the ",Object(o.b)("inlineCode",{parentName:"p"},"batch.javaOptions")," property within the values override file. The defaults are currently:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),'batch:\n javaOptions: "-Xms1g -Xmx1g"\n')),Object(o.b)(s,{mdxType:"InlineNotification"},Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Note:")," Kubernetes by default has limits set on resources such as memory and CPU usage. SPM containers require more resources than the default values that we have set.\nWe have set the default resource values to the limits that we have found to work best during development."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"The resource values are subject to change during further iterations.")),Object(o.b)("p",null,"The resource values can be changed. However, for troubleshooting, we will request that our default values are used at a minimum.")),Object(o.b)("h2",null,"Packaging the Helm charts"),Object(o.b)("p",null,"To use the Helm Charts to install SPM, package the charts and load them into a repository. For more information, see ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/spm-kubernetes/01-prereq/chartmuseum"}),"ChartMuseum"),"."),Object(o.b)("p",null,"For each chart, its dependencies must be resolved before it can be loaded into a Helm repository like Chart museum."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"cd $SPM_HOME/helm-charts\n\nhelm dependency update apps\nhelm dependency update mqserver\nhelm dependency update xmlserver\nhelm dependency update batch\nhelm dependency update web\nhelm dependency update uawebapp\n")),Object(o.b)("p",null,"If you made any changes to any of the charts, these can now be verified using the ",Object(o.b)("inlineCode",{parentName:"p"},"helm lint")," and ",Object(o.b)("inlineCode",{parentName:"p"},"helm template")," commands, for example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"cd $SPM_HOME/helm-charts\n\nhelm lint apps\nhelm template apps\n")),Object(o.b)("p",null,"To publish the individual charts to the Chart museum repository, run the following commands from the ",Object(o.b)("inlineCode",{parentName:"p"},"helm-charts")," folder. The commands also use the ",Object(o.b)("inlineCode",{parentName:"p"},"$SPM_HOME")," value that is defined in ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/spm-kubernetes/01-prereq/git"}),"Install prerequisite software"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"cd $SPM_HOME/helm-charts\n\nhelm push apps local-development\nhelm push mqserver local-development\nhelm push xmlserver local-development\nhelm push batch local-development\nhelm push web local-development\nhelm push uawebapp local-development\nhelm push openldap local-development\n\nhelm repo update\n")),Object(o.b)("p",null,"To generate the umbrella chart that is used for the deployment, run the following commands:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"cd $SPM_HOME/helm-charts\n\nhelm dependency update spm\nhelm push spm local-development\n\nhelm repo update\n")))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-04-deployment-hc-preparation-mdx-e2fe597d6abaaa258249.js.map