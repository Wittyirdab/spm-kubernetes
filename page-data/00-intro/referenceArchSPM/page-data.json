{"componentChunkName":"component---src-pages-00-intro-reference-arch-spm-mdx","path":"/00-intro/referenceArchSPM/","result":{"pageContext":{"frontmatter":{"title":"SPM architecture on IKS","description":"SPM architecture on IKS"},"relativePagePath":"/00-intro/referenceArchSPM.mdx","titleType":"page","MdxNode":{"id":"21680699-6609-569b-a542-ca9a3474f117","children":[],"parent":"88d6e069-475f-5b1d-8a3e-17e7867d7ade","internal":{"content":"---\ntitle: SPM architecture on IKS\ndescription: SPM architecture on IKS\n---\n\n## SPM Kubernetes cluster application architecture\n\nThe application architecture overview in this section represents how SPM should be deployed into IKS.\nThis architecture allows SPM to leverage the benefits of flexibility, elasticity, efficiency and the strategic value offered by cloud native architecture.\n\n![SPM on Kubernetes - Static Content](../../images/spm-reference-arch-kube.png)\n<Caption>\n\n*Figure 1:* SPM on Kubernetes - application architecture\n\n</Caption>\n\n* SPM deployed in WebSphere Liberty, lightweight JavaEE application server, designed for Kubernetes.\n* EAR files deployed in their own Liberty instance.\n* Liberty instances packaged in Docker images, which are run as Docker containers.\n* Batch packaged as Docker images, which are run as containers.\n* XML Server packaged as Docker images, which are run as containers.\n* SPM only supports SPM Docker containers when deployed into Kubernetes pods.\n* JMS messaging engine deployed separately using IBM MQ, managed through Helm charts.\n* Database and IBM MQ deployed on VM.\n  * Deployment of database on bare metal and VMs will still be supported when application tier is running in Kubernetes.\n  * SPM only supports IBM MQ hosted on bare metal and VMs.\n  * Keep the database and queue managers tier close to the application tier to reduce latency.\n","type":"Mdx","contentDigest":"772f02d19be23dab8731ad2cef618996","counter":123,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"SPM architecture on IKS","description":"SPM architecture on IKS"},"exports":{},"rawBody":"---\ntitle: SPM architecture on IKS\ndescription: SPM architecture on IKS\n---\n\n## SPM Kubernetes cluster application architecture\n\nThe application architecture overview in this section represents how SPM should be deployed into IKS.\nThis architecture allows SPM to leverage the benefits of flexibility, elasticity, efficiency and the strategic value offered by cloud native architecture.\n\n![SPM on Kubernetes - Static Content](../../images/spm-reference-arch-kube.png)\n<Caption>\n\n*Figure 1:* SPM on Kubernetes - application architecture\n\n</Caption>\n\n* SPM deployed in WebSphere Liberty, lightweight JavaEE application server, designed for Kubernetes.\n* EAR files deployed in their own Liberty instance.\n* Liberty instances packaged in Docker images, which are run as Docker containers.\n* Batch packaged as Docker images, which are run as containers.\n* XML Server packaged as Docker images, which are run as containers.\n* SPM only supports SPM Docker containers when deployed into Kubernetes pods.\n* JMS messaging engine deployed separately using IBM MQ, managed through Helm charts.\n* Database and IBM MQ deployed on VM.\n  * Deployment of database on bare metal and VMs will still be supported when application tier is running in Kubernetes.\n  * SPM only supports IBM MQ hosted on bare metal and VMs.\n  * Keep the database and queue managers tier close to the application tier to reduce latency.\n","fileAbsolutePath":"/home/travis/build/IBM/spm-kubernetes/src/pages/00-intro/referenceArchSPM.mdx"}}}}