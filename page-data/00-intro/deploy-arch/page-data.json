{"componentChunkName":"component---src-pages-00-intro-deploy-arch-mdx","path":"/00-intro/deploy-arch/","result":{"pageContext":{"frontmatter":{"title":"Deployment architecture","description":"Deployment architecture"},"relativePagePath":"/00-intro/deploy-arch.mdx","titleType":"page","MdxNode":{"id":"866dac36-32cc-54fd-bb53-bbe69e2bb1e0","children":[],"parent":"e48f7731-56ba-5fb3-b020-d015b923e689","internal":{"content":"---\ntitle: Deployment architecture\ndescription: Deployment architecture\n---\n\nThis runbook is designed for first-time users of Helm, Minikube, and Kubernetes.\n\nMinikube is a variant of Kubernetes that runs a single-node cluster inside a virtual machine (VM) on your laptop.\n\nThe procedure that is described uses a minimal architecture, where the intent is to get you familiar with using the main artifacts needed to run SPM on Kubernetes. Figure 1 describes the example architecture:\n\n![Example architecture](../../images/dev_workstation_architecture.png)\n<Caption>\n\n*Figure 1:* Example dev workstation architecture\n\n</Caption>\n\nThe architecture is defined by a Kubernetes environment (contained in a virtual machine) that is composed of the following elements:\n\n* An IBM® WebSphere® Liberty based pod that contains the Cúram EAR file.\n* A pod with an IBM MQ Server configured as the message engine to support JMS-based deferred processing in SPM.\n* A pod that contains the XML server.\n* A pod that runs batch processes.\n\nThis environment is linked to an external IBM Db2 or Oracle database.\n\nFor the Kubernetes cluster, this runbook uses Minikube. Minikube can easily run on a developer computer, which is convenient for describing the application flow.\n\nFigure 2 describes the following development path.\n\n* Create a build and deployment environment for SPM.\n* Build SPM to deploy it on Kubernetes on Minikube.\n* Create the Docker® images for SPM.\n* Deploy SPM Docker images to Kubernetes on Minikube.\n* Troubleshoot SPM when deployed in Kubernetes.\n\n![Process summary](../../images/summary_process.png)\n<Caption>\n\n*Figure 2:* Process summary\n\n</Caption>\n\n<InlineNotification>\n\n**Note:** The implementation of SPM that is described in this runbook uses only the following .ear files:\n\n* Curam.ear\n* CuramServerCode.ear\n\nThe scripts can be easily extended to include the other SPM applications, such as Rest or Citizen Portal.\n\n</InlineNotification>\n\nThe runbook makes the following assumptions:\n\n* Steps to build the SPM containers and run Minikube are run on a development machine, preferably a Red Hat or OSX machine.\n* Steps related to [Building the IBM Cúram Social Program Management application](/02-deploy-spm/spm-build) can be executed on a separate machine.\n* Base knowledge of the Linux command line for navigating folders.\n\n<InlineNotification>\n\n**Note:** This is enablement documentation. This does not affect 3rd party software that SPM currently supports. Refer to [IBM Curam Social Program Management Support Prerequisites](https://www.ibm.com/software/reports/compatibility/clarity-reports/report/html/softwareReqsForProduct?deliverableId=4250BFF0E44711E9BBE3B807AD202AB8&osPlatforms=Linux&duComponentIds=S000#sw-3)\n for more details.\n\n</InlineNotification>\n","type":"Mdx","contentDigest":"afde3af7e8ad5eac6c5f3e9d9d4d2040","counter":122,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Deployment architecture","description":"Deployment architecture"},"exports":{},"rawBody":"---\ntitle: Deployment architecture\ndescription: Deployment architecture\n---\n\nThis runbook is designed for first-time users of Helm, Minikube, and Kubernetes.\n\nMinikube is a variant of Kubernetes that runs a single-node cluster inside a virtual machine (VM) on your laptop.\n\nThe procedure that is described uses a minimal architecture, where the intent is to get you familiar with using the main artifacts needed to run SPM on Kubernetes. Figure 1 describes the example architecture:\n\n![Example architecture](../../images/dev_workstation_architecture.png)\n<Caption>\n\n*Figure 1:* Example dev workstation architecture\n\n</Caption>\n\nThe architecture is defined by a Kubernetes environment (contained in a virtual machine) that is composed of the following elements:\n\n* An IBM® WebSphere® Liberty based pod that contains the Cúram EAR file.\n* A pod with an IBM MQ Server configured as the message engine to support JMS-based deferred processing in SPM.\n* A pod that contains the XML server.\n* A pod that runs batch processes.\n\nThis environment is linked to an external IBM Db2 or Oracle database.\n\nFor the Kubernetes cluster, this runbook uses Minikube. Minikube can easily run on a developer computer, which is convenient for describing the application flow.\n\nFigure 2 describes the following development path.\n\n* Create a build and deployment environment for SPM.\n* Build SPM to deploy it on Kubernetes on Minikube.\n* Create the Docker® images for SPM.\n* Deploy SPM Docker images to Kubernetes on Minikube.\n* Troubleshoot SPM when deployed in Kubernetes.\n\n![Process summary](../../images/summary_process.png)\n<Caption>\n\n*Figure 2:* Process summary\n\n</Caption>\n\n<InlineNotification>\n\n**Note:** The implementation of SPM that is described in this runbook uses only the following .ear files:\n\n* Curam.ear\n* CuramServerCode.ear\n\nThe scripts can be easily extended to include the other SPM applications, such as Rest or Citizen Portal.\n\n</InlineNotification>\n\nThe runbook makes the following assumptions:\n\n* Steps to build the SPM containers and run Minikube are run on a development machine, preferably a Red Hat or OSX machine.\n* Steps related to [Building the IBM Cúram Social Program Management application](/02-deploy-spm/spm-build) can be executed on a separate machine.\n* Base knowledge of the Linux command line for navigating folders.\n\n<InlineNotification>\n\n**Note:** This is enablement documentation. This does not affect 3rd party software that SPM currently supports. Refer to [IBM Curam Social Program Management Support Prerequisites](https://www.ibm.com/software/reports/compatibility/clarity-reports/report/html/softwareReqsForProduct?deliverableId=4250BFF0E44711E9BBE3B807AD202AB8&osPlatforms=Linux&duComponentIds=S000#sw-3)\n for more details.\n\n</InlineNotification>\n","fileAbsolutePath":"/home/travis/build/IBM/spm-kubernetes/src/pages/00-intro/deploy-arch.mdx"}}}}